
آموزش Emacs. برای شرایط کپی به پایان مراجعه کنید.



دستورات Emacs عموماً شامل کلید CONTROL (گاهی اوقات برچسب زده می شود
CTRL یا CTL) یا کلید META (گاهی با برچسب EDIT یا ALT). به جای
بنویسید که هر بار به طور کامل از اختصارات زیر استفاده خواهیم کرد:

 <حرف>−C  به معنای نگه داشتن کلید CONTROL در حین تایپ کاراکتر <حرف> است
          بنابراین، C-f خواهد بود: کلید CONTROL را نگه دارید و f را تایپ کنید.
 <حرف>−M  یعنی کلید META یا EDIT یا ALT را هنگام تایپ <حرف> پایین نگه دارید.
          اگر کلید META، EDIT یا ALT وجود ندارد، به جای آن کلید را فشار داده و رها کنید
          کلید ESC و سپس <حرف> را تایپ کنید. برای کلید ESC  می نویسیم <ESC>.

نکته مهم: برای پایان دادن به جلسه Emacs، C-x C-c را تایپ کنید. (دو شخصیت.)
برای خروج از یک دستور نیمه وارد شده، C-g را تایپ کنید.
برای توقف آموزش، C-x k و سپس <Return> را در دستور تایپ کنید.
کاراکترهای ">>" در حاشیه سمت چپ مسیرهایی را برای شما نشان می دهد










[وسط صفحه برای اهداف آموزشی خالی مانده است. ادامه متن در زیر]



















>> اکنون C-v (نمایش صفحه بعدی) را تایپ کنید تا در آموزش به پایین بروید.
(این کار را با نگه داشتن کلید CONTROL در حین تایپ v انجام دهید).
از این پس، لطفاً هر زمان که به انتهای صفحه رسیدید، این کار را انجام دهید.

توجه داشته باشید که وقتی یک کل را اسکرول می کنید، دو خط همپوشانی دارند
نمایشگر؛ این مقداری تداوم را فراهم می کند تا بتوانید به خواندن ادامه دهید
متن.

این یک کپی از متن آموزشی Emacs است که کمی برای آن سفارشی شده است
شما. بعداً به شما دستور خواهیم داد که دستورات مختلفی را برای تغییر امتحان کنید
این متن. اگر قبل از اینکه به شما بگوییم این متن را تغییر دهید نگران نباشید.
که "ویرایش" نامیده می شود و Emacs برای همین است.

اولین چیزی که باید بدانید این است که چگونه از یک مکان به اطراف حرکت کنید
برای قرار دادن در متن شما قبلاً می دانید چگونه یک صفحه به جلو حرکت کنید،
با C-v. برای حرکت به سمت عقب یک صفحه، M-v را تایپ کنید (کلید META را نگه دارید
و v را تایپ کنید، یا اگر کلید META، EDIT یا ALT ندارید، ‪ <ESC>v‬ را تایپ کنید.

>> چند بار M-v و سپس C-v را تایپ کنید.

اگر می‌دانید، خوب است که این متن را به روش‌های دیگری اسکرول کنید.

* خلاصه
---------

دستورات زیر برای مشاهده صفحه نمایش مفید هستند:

    با  C-v   یک صفحه نمایش به جلو حرکت کنید
    با  M-v   یک صفحه نمایش به عقب حرکت کنید
    با  C-l   پاک کردن صفحه و نمایش مجدد تمام متن،
          حرکت متن در اطراف مکان نما
          به مرکز صفحه نمایش
         (این CONTROL-L است، نه CONTROL-1.)

>> مکان نما را پیدا کنید و توجه داشته باشید که چه متنی در نزدیکی آن است. سپس C-l را تایپ کنید.
   دوباره مکان نما را پیدا کنید و متوجه شوید که همان متن هنوز نزدیک است
   مکان نما، اما اکنون در مرکز صفحه است.
   اگر دوباره C-l را فشار دهید، این قطعه متن به بالای صفحه منتقل می شود
   صفحه نمایش دوباره C-l را فشار دهید و به پایین حرکت می کند.

همچنین می‌توانید از کلیدهای PageUp و PageDn برای جابه‌جایی بر اساس نمایشگرها استفاده کنید
ترمینال شما آنها را دارد، اما در صورت استفاده می توانید کارآمدتر ویرایش کنید
C-v و M-v.

* کنترل مکان نما
----------------------

حرکت از صفحه نمایش به صفحه نمایش مفید است، اما چگونه
به مکان خاصی در متن روی صفحه حرکت کنید؟

چندین راه وجود دارد که می توانید این کار را انجام دهید. می توانید از کلیدهای جهت دار استفاده کنید،
اما کارآمدتر است که دستان خود را در وضعیت استاندارد نگه دارید
و از دستورات C-p، C-b، C-f و C-n استفاده کنید. این شخصیت ها
معادل چهار کلید جهت دار هستند، مانند:

                                   سطر قبل، C-p
                                         :
                                         :
                            به عقب، C-b .... موقعیت مکان نما فعلی .... به جلو، C-f
                                         :
                                         :
                                   خط بعدی، C-n

>> مکان نما را به خط وسط آن نمودار حرکت دهید
   با استفاده از C-n یا C-p. سپس C-l را تایپ کنید تا کل نمودار را ببینید
   در مرکز صفحه نمایش

به راحتی می توانید این حروف را با کلماتی که مخفف آنها هستند به خاطر بسپارید:
P برای قبلی، N برای بعدی، B برای عقب و F برای جلو. شما
همیشه از این دستورات اصلی تعیین موقعیت مکان نما استفاده خواهد کرد.

>> برای پایین آوردن مکان نما به این خط، چند C-n انجام دهید.

>> حرکت به خط با C-f و سپس به بالا با C-p.
   ببینید C-p وقتی مکان نما در وسط خط قرار دارد چه می کند.

هر خط از متن با یک کاراکتر Newline به پایان می رسد، که به کار می رود
آن را از خط زیر جدا کنید (به طور معمول، آخرین خط در
یک فایل در پایان دارای یک Newline خواهد بود، اما Emacs به آن نیاز ندارد.)

>> سعی کنید به C-b در ابتدای یک خط. باید به
   انتهای خط قبلی این به این دلیل است که به عقب حرکت می کند
   در سراسر کاراکتر Newline

دستور C-f می تواند مانند C-b روی خط جدید حرکت کند.

>> چند C-b دیگر انجام دهید، بنابراین می توانید مکان نما را در کجا قرار دهید.
   سپس C-f را انجام دهید تا به انتهای خط برگردید.
   سپس یک C-f دیگر انجام دهید تا به خط زیر بروید.

وقتی از بالا یا پایین صفحه عبور می کنید، متن فراتر می رود
لبه روی صفحه نمایش جابجا می شود. به این "پیمایش" می گویند. آی تی
Emacs را قادر می سازد مکان نما را به t منتقل کند

وقتی از بالا یا پایین صفحه عبور می کنید، متن فراتر می رود
لبه روی صفحه نمایش جابجا می شود. به این "پیمایش" می گویند. آی تی
Emacs را قادر می سازد مکان نما را به مکان مشخص شده در متن منتقل کند
بدون اینکه آن را از صفحه نمایش جدا کنید.

>> سعی کنید مکان نما را از پایین صفحه با C-n حرکت دهید و
   ببین چه اتفاقی افتاده.

اگر حرکت بر اساس کاراکترها خیلی کند است، می توانید با کلمات حرکت کنید. M-f
(META-f) یک کلمه را جلو می برد و M-b یک کلمه را به عقب می برد.

>> چند M-f و M-b تایپ کنید.

وقتی در وسط یک کلمه هستید، M-f به انتهای کلمه می رود.
هنگامی که در فضای خالی بین کلمات قرار دارید، M-f به انتهای کلمه منتقل می شود
کلمه زیر M-b نیز در جهت مخالف کار می کند.

>> دستور M-f و M-b را چند بار تایپ کنید، با C-f و C-b در هم آمیخته شده است.
   به طوری که می توانید عمل M-f و M-b را از انواع مختلف مشاهده کنید
   مکان های درون و بین کلمات

به موازی بین C-f و C-b از یک طرف و M-f و توجه کنید
M-b از طرف دیگر. اغلب از کاراکترهای متا استفاده می شود
عملیات مربوط به واحدهای تعریف شده توسط زبان (کلمات، جملات،
پاراگراف ها)، در حالی که کاراکترهای Control بر روی واحدهای اصلی که هستند عمل می کنند
مستقل از آنچه در حال ویرایش هستید (شخصیت ها، خطوط و غیره).

این توازی بین خطوط و جملات اعمال می شود: C-a و C-e حرکت به
** C-a برگشت داده شده است، اما می توانید به جای آن از <home> استفاده کنید [بیشتر] **
** C-e برگشت داده شده است، اما می توانید به جای آن از <end> استفاده کنید [بیشتر] **
ابتدا یا انتهای یک خط، و M-a و M-e به ابتدا حرکت می کنند
یا پایان یک جمله

>> یک زن و شوهر از C-a، و سپس یک زن و شوهر از C-e را امتحان کنید.
   چند M-a و سپس چند M-e را امتحان کنید.

ببینید چگونه C-a های تکراری هیچ کاری انجام نمی دهند، اما M-a های تکراری به حرکت خود ادامه می دهند
جمله بیشتر اگرچه اینها کاملاً مشابه نیستند، اما هر یک به نظر می رسد
طبیعی

به مکان مکان نما در متن "نقطه" نیز می گویند. به
به عبارت دیگر، مکان نما روی صفحه نشان می دهد که نقطه در کجا قرار دارد
متن.

در اینجا خلاصه ای از عملیات ساده حرکت مکان نما، از جمله
دستورات حرکت کلمه و جمله:

           با C-f    حرکت یک کاراکتر به جلو
           با C-b    یک کاراکتر را به عقب حرکت دهید

           با M-f    یک کلمه به جلو حرکت کنید
           با M-b    یک کلمه را به عقب حرکت دهید

           با C-n    به خط بعدی بروید
           با C-p    به خط قبلی بروید

           با C-a    حرکت به ابتدای خط
           با C-e    حرکت به انتهای خط

           با M-a    به ابتدای جمله برگردید
           با M-e    حرکت به جلو تا پایان جمله

>> همه این دستورات را اکنون چند بار برای تمرین امتحان کنید.
   این دستورات بیشترین استفاده را دارند.

دو فرمان مهم دیگر حرکت مکان نما عبارتند از‪ M-< ‬ (META کمتر از)،
که به ابتدای کل متن حرکت می کند و ‪M->‬
(META  بزرگتر از)، که به انتهای کل متن می رود.

در اکثر پایانه ها، "<" بالای کاما است، بنابراین باید از آن استفاده کنید
کلید shift را تایپ کنید. در این پایانه ها باید از کلید shift استفاده کنید
برای تایپ M-< نیز; بدون کلید shift، شما باید کاما M را تایپ کنید.

>> اکنون M-< را امتحان کنید تا به ابتدای آموزش بروید.
   سپس از C-v مکرراً برای بازگشت به اینجا استفاده کنید.

>> اکنون M-> را امتحان کنید تا به انتهای آموزش بروید.
   سپس از M-v مکرراً برای بازگشت به اینجا استفاده کنید.

همچنین می توانید مکان نما را با کلیدهای جهت دار حرکت دهید، اگر ترمینال شما این کار را داشته باشد
کلیدهای جهت دار توصیه می کنیم برای سه نفر C-b، C-f، C-n و C-p را یاد بگیرید
دلایل اول، آنها بر روی انواع پایانه ها کار می کنند. دوم، یک بار
اگر در استفاده از Emacs تمرین کنید، متوجه خواهید شد که با تایپ این کنترل ها
کاراکترها سریعتر از تایپ کلیدهای جهت دار است (چون شما این کار را نمی کنید
باید دستان خود را از موقعیت تایپ لمسی دور کنید). سوم، یک بار
شما عادت به استفاده از این دستورات کاراکتر Control را دارید، می توانید
به راحتی یاد بگیرید که از دیگر دستورات پیشرفته حرکت مکان نما نیز استفاده کنید.

اکثر دستورات Emacs یک آرگومان عددی را می پذیرند. برای اکثر دستورات، این
به عنوان یک شمارش تکرار عمل می کند. روشی که به یک فرمان می دهید تعداد تکرار می شود
با تایپ C-u و سپس اعداد قبل از تایپ دستور است. اگر
شما یک کلید META (یا EDIT یا ALT) دارید، راه جایگزین دیگری وجود دارد
برای وارد کردن آرگومان عددی: ارقام را در حالی که دکمه را نگه دارید تایپ کنید
کلید متا. ما توصیه می کنیم روش C-u را یاد بگیرید زیرا کار می کند
هر ترمینال آرگومان عددی "آگومان پیشوند" نیز نامیده می شود.
زیرا آرگومان را قبل از دستوری که روی آن اعمال می شود تایپ می کنید.

به عنوان مثال، C-u 8 C-f هشت کاراکتر به جلو حرکت می کند.

>> سعی کنید از C-n یا C-p با آرگومان عددی برای حرکت مکان نما استفاده کنید
   به خطی نزدیک به این خط فقط با یک دستور.

اکثر دستورات از آرگومان عددی به عنوان تعداد تکرار استفاده می کنند، اما برخی
دستورات از آن به روش دیگری استفاده می کنند. چندین دستور (اما هیچ کدام
کسانی که تا به حال آموخته اید) از آن به عنوان یک پرچم استفاده کنید - وجود یک
آرگومان پیشوند، صرف نظر از مقدار آن، دستور را انجام می دهد
چیزی متفاوت

با C-v و M-v نوع دیگری از استثنا هستند. وقتی استدلال می شود،
آنها متن را با این تعداد خط به بالا یا پایین اسکرول می کنند نه با a
صفحه نمایش برای مثال، C-u 8 C-v 8 خط پیمایش می کند.

>> اکنون C-u 8 C-v را تایپ کنید.

این باید متن را 8 خط به بالا اسکرول می کرد. اگر دوست دارید
برای پیمایش دوباره به پایین، می توانید یک آرگومان به M-v بدهید.

اگر از یک صفحه نمایش گرافیکی مانند X یا MS-Windows استفاده می کنید، وجود دارد
باید یک ناحیه مستطیلی بلند به نام نوار پیمایش در یک طرف باشد
پنجره Emacs می توانید با کلیک کردن بر روی متن، متن را اسکرول کنید
نوار اسکرول

اگر ماوس شما دکمه چرخ دارد، می توانید از آن برای اسکرول نیز استفاده کنید.


* اگر EMACS پاسخ را متوقف کند
---------------------------

اگر Emacs به دستورات شما پاسخ نمی دهد، می توانید با خیال راحت آن را متوقف کنید
تایپ کردن C-g می توانید از C-g برای متوقف کردن دستوری که در حال گرفتن است استفاده کنید
طولانی برای اجرا

همچنین می‌توانید از C-g برای حذف یک آرگومان عددی یا ابتدای آن استفاده کنید
دستوری که نمی خواهید آن را تمام کنید.

>> با C-u 100 را تایپ کنید تا آرگومان عددی 100 بسازید، سپس C-g را تایپ کنید.
   حالا C-f را تایپ کنید. این باید فقط یک شخصیت حرکت کند، زیرا شما
   استدلال با C-g را لغو کرد.

اگر یک <ESC> را اشتباه تایپ کرده اید، می توانید با یک C-g از شر آن خلاص شوید.


* دستورات غیر فعال
-------------------

برخی از دستورات Emacs "غیرفعال" هستند تا کاربران مبتدی نتوانند از آن استفاده کنند
آنها به طور تصادفی

اگر یکی از دستورات غیرفعال را تایپ کنید، Emacs پیامی را نمایش می دهد
گفتن فرمان چیست و از شما می پرسد که آیا می خواهید بروید
جلو بروید و دستور را اجرا کنید.

اگر واقعاً می خواهید دستور را امتحان کنید، <SPC> (نوار فاصله) را در آن تایپ کنید
به سوال پاسخ بدهید. به طور معمول، اگر نمی خواهید آن را اجرا کنید
دستور غیر فعال، به سوال با "n" پاسخ دهید.

>> نوع C-x C-l (که یک دستور غیرفعال است)،
   سپس برای پاسخ به سوال n را تایپ کنید.


* پنجره ها
---------

با Emacs می تواند چندین "پنجره" داشته باشد که هر کدام متن خاص خود را نشان می دهد. ما
بعداً در مورد نحوه استفاده از چندین ویندوز توضیح خواهد داد. در حال حاضر ما می خواهیم
برای توضیح نحوه خلاص شدن از شر پنجره های اضافی و بازگشت به حالت اولیه
ویرایش یک پنجره آسان است:

با C-x 1 یک پنجره (یعنی تمام پنجره های دیگر را بکشید).

یعنی CONTROL-x و سپس رقم 1. C-x 1 پنجره را باز می کند
که حاوی مکان نما است تا تمام صفحه را اشغال کند. همه رو حذف میکنه
پنجره های دیگر

>> مکان نما را به این خط ببرید و C-u 0 C-l را تایپ کنید.
>> نوع C-h k C-f.
   ببینید چگونه این پنجره کوچک می شود، در حالی که یک پنجره جدید ظاهر می شود
   برای نمایش مستندات در دستور C-f.

>> با C-x 1 را تایپ کنید و پنجره فهرست اسناد ناپدید می شود.

یک سری کامل از دستورات وجود دارد که با CONTROL-x شروع می شود. بسیاری از
آنها با ویندوز، فایل ها، بافرها و موارد مرتبط مرتبط هستند.
این دستورات دو، سه یا چهار کاراکتر هستند.


* درج و حذف
-----------------------

اگر می خواهید متن را وارد کنید، فقط متن را تایپ کنید. شخصیت های معمولی،
مانند A، 7، *، و غیره، هنگام تایپ آنها درج می شوند. برای درج الف
کاراکتر خط جدید، <Return> را تایپ کنید (این کلید روی صفحه کلید است
که گاهی اوقات با عنوان "Enter" شناخته می شود).

برای حذف کاراکتر بلافاصله قبل از مکان نما فعلی
موقعیت، <DEL> را تایپ کنید. این کلید روی صفحه کلید است که معمولاً برچسب گذاری می شود
"Backspace" - همان چیزی که معمولاً در خارج از Emacs برای حذف استفاده می کنید
آخرین کاراکتر تایپ شده

همچنین ممکن است کلید دیگری روی صفحه کلید شما با عنوان <حذف> وجود داشته باشد، اما
این چیزی نیست که ما به آن <DEL> می گوییم.

>> اکنون این کار را انجام دهید - چند کاراکتر را تایپ کنید، سپس آنها را حذف کنید
   چند بار <DEL> را تایپ کنید. نگران این فایل نباشید
   در حال تغییر؛ شما آموزش اصلی را تغییر نمی دهید.
   این کپی شخصی شما از آن است.

وقتی یک خط متن برای یک خط روی صفحه بیش از حد بزرگ می شود، خط
متن بر روی خط دوم صفحه "ادامه" می یابد. اگر از a استفاده می کنید
صفحه نمایش گرافیکی، فلش های کوچک منحنی در فضاهای باریک ظاهر می شوند
هر طرف ناحیه متن (حاشیه‌های چپ و راست)، برای نشان دادن
جایی که یک خط ادامه یافته است. اگر از ترمینال متنی استفاده می کنید،
خط ادامه یافته با علامت معکوس ('\') در سمت راست نشان داده می شود
ستون صفحه نمایش

>> متن را تا زمانی که به حاشیه سمت راست برسید وارد کنید و به درج کردن ادامه دهید.
   خواهید دید که یک خط ادامه ظاهر می شود.

>> از <DEL>s برای حذف متن استفاده کنید تا زمانی که خط روی یک صفحه قرار گیرد
   دوباره خط خط ادامه از بین می رود.

شما می توانید یک کاراکتر Newline را مانند هر کاراکتر دیگری حذف کنید.
حذف کاراکتر Newline بین دو خط آنها را با هم ادغام می کند
یک خط. اگر خط ترکیبی به دست آمده بیش از حد طولانی باشد که در آن جا نمی شود
عرض صفحه نمایش، با یک خط ادامه نمایش داده می شود.

>> مکان نما را به ابتدای یک خط ببرید و <DEL> را تایپ کنید. این
   آن خط را با خط قبلی ادغام می کند.

>> حالا <Return> را تایپ کنید تا خط جدیدی را که حذف کرده اید دوباره وارد کنید.

کلید <Return> ویژه است، زیرا با فشار دادن آن ممکن است بیش از این کار انجام شود
فقط یک کاراکتر Newline وارد کنید. بسته به متن اطراف،
ممکن است بعد از کاراکتر Newline فضای خالی را وارد کند، به طوری که وقتی
شما شروع به تایپ کردن در خط جدید ایجاد شده می کنید، متن با آن ردیف می شود
که در خط قبلی ما به این رفتار می گوییم (که در آن فشار دادن a
کلید چیزی بیش از وارد کردن کاراکتر مربوطه) "electric" انجام می دهد.

>> در اینجا مثالی از الکتریکی بودن <Return> آورده شده است.
   <Return> را در انتهای این خط تایپ کنید.

باید ببینید که بعد از درج Newline، Emacs فاصله ها را درج می کند
به طوری که مکان نما زیر "T" از "Type" حرکت می کند.

به یاد داشته باشید که به اکثر دستورات Emacs می توان تعداد تکرار داده شود.
این شامل کاراکترهای متنی است. تکرار درج کاراکتر متنی
آن را چندین بار

>> اکنون آن را امتحان کنید - ‪ C-u 8 *‬ را برای درج ******** تایپ کنید.

شما اکنون ابتدایی ترین راه را برای تایپ چیزی یاد گرفته اید
Emacs و تصحیح خطاها. شما می توانید با کلمات یا خطوط حذف کنید
همچنین. در اینجا خلاصه ای از عملیات حذف آمده است:

      با <DEL>      کاراکتر را درست قبل از مکان نما حذف کنید
      با C−d        کاراکتر بعدی بعد از مکان نما را حذف کنید

      با‪  M-<DEL> ‬ کلمه را بلافاصله قبل از مکان نما بکشید
      با  M-d      کلمه بعدی را بعد از مکان نما بکشید

      با C-k       از موقعیت مکان نما تا انتهای خط بکشید
      با M-k       تا آخر جمله جاری بکش

توجه داشته باشید که <DEL> و C-d در مقابل M-<DEL> و M-d موازی را گسترش می دهند
با C-f و M-f شروع شده است (خوب، <DEL> واقعاً یک کاراکتر کنترلی نیست،
اما بیایید نگران این نباشیم). C-k و M-k مانند C-e و M-e هستند،
به نوعی، در آن خطوط با جملات جفت می شوند.

شما همچنین می توانید یک بخش از متن را با یک روش یکسان بکشید. حرکت به
یک انتهای آن قسمت، و نوع C-<SPC>. (<SPC> نوار Space است.)
سپس مکان نما را به انتهای دیگر متنی که قصد دارید بکشید، ببرید.
با انجام این کار، Emacs متن بین مکان نما و نشانگر را برجسته می کند
موقعیتی که C-<SPC> را تایپ کردید. در نهایت C-w را تایپ کنید. این همه را می کشد
متن بین دو موقعیت

>> مکان نما را در ابتدای پاراگراف قبلی به Y حرکت دهید.
>> نوع C-<SPC>. Emacs باید یک پیام "Mark set" را نمایش دهد
   در پایین صفحه نمایش
>> مکان نما را به n در "پایان"، در خط دوم حرکت دهید
   پاراگراف
>> نوع C-w. با این کار متنی که از Y شروع می شود را از بین می برد.
   و درست قبل از n به پایان می رسد.

تفاوت بین "کشتن" و "حذف" در همان متن "کشته" است
را می توان دوباره درج کرد (در هر موقعیتی)، در حالی که چیزهای "حذف شده" نمی توانند
به این روش دوباره درج شود (اما می توانید حذف را لغو کنید - ببینید
زیر). درج مجدد متن کشته شده "yanking" نامیده می شود. (بهش فکر کن
به عنوان عقب نشینی یا عقب کشیدن متنی که برداشته شده است.)
به طور کلی، دستوراتی که می توانند متن زیادی را حذف کنند، متن را از بین می برند
(آنها به گونه ای تنظیم شده اند که بتوانید متن را تغییر دهید)، در حالی که دستورات
که فقط یک کاراکتر را حذف می کند، یا فقط خطوط و فاصله های خالی را حذف می کند،
حذف را انجام دهید (بنابراین نمی توانید آن متن را حذف کنید). <DEL> و C-d حذف را انجام می دهند
در ساده ترین حالت، بدون هیچ استدلالی. وقتی استدلالی به آنها داده می شود
در عوض بکش

>> مکان نما را به ابتدای خطی که خالی نیست حرکت دهید.
   سپس C-k را تایپ کنید تا متن روی آن خط حذف شود.
>> بار دوم C-k را تایپ کنید. خواهید دید که Newline را می کشد
   که از آن خط پیروی می کند.

توجه داشته باشید که یک C-k محتویات خط را می کشد و یک ثانیه
C-k خود خط را می کشد و همه خطوط دیگر را به سمت بالا حرکت می دهد. C-k
به طور خاص با یک آرگومان عددی برخورد می کند: این تعداد خطوط AND را از بین می برد
محتویات آنها این یک تکرار صرف نیست. C-u 2 C-k دو نفر را می کشد
خطوط و خطوط جدید آنها. تایپ کردن C-k دو بار این کار را نمی کند.

می‌توانید متن کشته‌شده را در همان مکانی که در آن قرار داشت، پر کنید
کشته شده، یا در جای دیگری از متنی که در حال ویرایش آن هستید، یا حتی در آن
یک فایل متفاوت می‌توانید یک متن را چندین بار به هم بزنید. که
چندین کپی از آن می سازد. برخی دیگر از سردبیران کشتن و
انحراف "برش" و "چسباندن" (به واژه نامه در Emacs مراجعه کنید
کتابچه راهنمای).

دستور یانک C-y است. آخرین متن کشته شده را دوباره درج می کند،
در موقعیت مکان نما فعلی

>> آن را امتحان کنید. C-y را تایپ کنید تا متن را به عقب برگردانید.

اگر چندین C-k را پشت سر هم انجام دهید، تمام متن کشته شده ذخیره می شود
با هم، به طوری که یک C-y همه خطوط را به یکباره انحراف می دهد.

>> اکنون این کار را انجام دهید، C-k را چندین بار تایپ کنید.

حال برای بازیابی آن متن کشته شده:

>> نوع C-y. سپس مکان نما را چند خط پایین ببرید و C-y را تایپ کنید
   از نو. اکنون نحوه کپی کردن متن را مشاهده می کنید.

اگر متنی داشته باشید که می خواهید به عقب برگردید، چه کار می کنید
چیز دیگری می کشی؟ C-y کشتن اخیر را از بین می برد. ولی
متن قبلی گم نمی شود می توانید با استفاده از M-y به آن برگردید
فرمان بعد از اینکه C-y را برای دریافت آخرین kill انجام دادید، تایپ کنید
M-y آن متن یاک شده را با kill قبلی جایگزین می کند. تایپ کردن M-y
بارها و بارها کشتارهای قبلی و قبلی را به ارمغان می آورد. وقتی دارید
به متن مورد نظر رسیدید، لازم نیست کاری انجام دهید
نگهش دار. فقط به ویرایش خود ادامه دهید و متن انحرافی را رها کنید
این است.

اگر تعداد دفعات کافی داشته باشید، به نقطه شروع باز می گردید (بیشترین
کشتن اخیر).

>> کشتن یک خط، حرکت در اطراف، کشتن یک خط دیگر.
   سپس C-y را انجام دهید تا دومین خط کشته شده را برگردانید.
   سپس M-y را انجام دهید و اولین خط کشته شده جایگزین آن می شود.
   M-y های بیشتری انجام دهید و ببینید چه چیزی به دست می آورید. به انجام آنها ادامه دهید تا زمانی که
   خط کشتن دوم برمی گردد، و سپس چند مورد دیگر.
   اگر دوست دارید، می توانید سعی کنید به M-y مثبت و منفی بدهید
   استدلال ها


* لغو
------

اگر تغییری در متن ایجاد کنید و سپس تصمیم بگیرید که یک تغییر است
اشتباه، شما می توانید تغییر را با دستور ‪ undo، C-/‬ لغو کنید.

به طور معمول، ‪ C-/‬ تغییرات ایجاد شده توسط یک دستور را خنثی می کند.
اگر تکرار کنید ‪ C-/‬ چندین بار پشت سر هم،
هر تکرار یک دستور دیگر را خنثی می کند.

اما دو استثنا وجود دارد: دستوراتی که متن را تغییر نمی دهند
به حساب نمی آیند (این شامل دستورات حرکت مکان نما و اسکرول می شود
دستورات)، و کاراکترهای خود درج معمولاً در گروه ها مدیریت می شوند
تا 20. (این برای  کاهش  تعداد‪ C-/ ‬ هایی است که باید تایپ کنید
برای لغو درج متن.)

>> این خط را با C-k بکشید، سپس C-/ را تایپ کنید و باید دوباره ظاهر شود.

با C-_ یک دستور لغو جایگزین است. دقیقاً مانند‪ C-/ ‬ کار می کند.
در برخی از پایانه های متنی، تایپ‪ C-/ ‬ در واقع C-_ را به Emacs ارسال می کند.
از طرف دیگر، C-x u نیز دقیقاً مانند‪ C-/ ‬ کار می کند، اما کمی کمتر است
راحت تایپ کنید

یک آرگومان عددی به ‪C-/‬، C-_، یا C-x u به عنوان یک تعداد تکرار عمل می کند.

همانطور که می توانید حذف متن را لغو کنید، می توانید حذف متن را لغو کنید.
تمایز بین کشتن چیزی و حذف آن تأثیر می گذارد
آیا شما می توانید آن را با C-y خم کنید. برای لغو فرقی نمی کند.


* فایل ها
-------

برای اینکه متنی را که ویرایش می کنید دائمی کنید، باید آن را در a قرار دهید
فایل. در غیر این صورت، با خروج از Emacs از بین می رود. به منظور. واسه اینکه. برای اینکه
متن خود را در یک فایل قرار دهید، قبل از وارد کردن فایل باید آن را "پیدا کنید".
متن (به این "بازدید از فایل" نیز گفته می شود.)

پیدا کردن یک فایل به این معنی است که شما محتویات فایل را در داخل می بینید
ایمکس. از بسیاری جهات، گویی در حال ویرایش خود فایل هستید.
با این حال، تغییراتی که با استفاده از Emacs ایجاد می کنید دائمی نمی شوند
تا زمانی که فایل را "ذخیره" کنید. این به این دلیل است که می توانید از ترک a اجتناب کنید
زمانی که نمی خواهید فایل را نیمه تغییر در سیستم دارید. حتی وقتی که
در صورت ذخیره، Emacs فایل اصلی را با نام تغییر یافته باقی می گذارد
بعداً تصمیم می گیرید که تغییرات شما اشتباه بوده است.

اگر به پایین صفحه نگاه کنید، خطی را خواهید دید که
با خط تیره شروع می شود و با "-:--- TUTORIAL" یا چیزی شروع می شود
مانند آن این قسمت از صفحه نمایش معمولاً نام آن را نشان می دهد
فایلی که از آن بازدید می کنید در حال حاضر، شما در حال بازدید از شخصی خود هستید
کپی از آموزش Emacs که "TUTORIAL" نام دارد. وقتی پیدا کردی
یک فایل با Emacs، نام آن فایل در همان نقطه دقیق ظاهر می شود.

یک چیز خاص در مورد دستور برای یافتن یک فایل این است که شما
باید بگویید چه نام فایلی را می خواهید. ما می گوییم دستور "خوانده an
argument" (در این مورد، آرگومان نام فایل است).
شما دستور را تایپ می کنید

با C-x C-f یک فایل را پیدا کنید

با Emacs از شما می خواهد که نام فایل را تایپ کنید. نام فایلی که تایپ می کنید ظاهر می شود
در خط پایین صفحه نمایش خط پایین نامیده می شود
مینی بافر زمانی که برای این نوع ورودی استفاده می شود. شما می توانید استفاده کنید
دستورات ویرایش معمولی Emacs برای ویرایش نام فایل.

در حالی که نام فایل (یا هر ورودی کوچک بافر) را وارد می کنید،
می توانید با C-g دستور را لغو کنید.

>> با C-x C-f را تایپ کنید، سپس C-g را تایپ کنید. این مینی بافر را لغو می کند،
   و همچنین دستور C-x C-f را که از آن استفاده می کرد لغو می کند
   مینی بافر بنابراین شما هیچ فایلی را پیدا نمی کنید.

وقتی نام فایل را وارد کردید، <Return> را تایپ کنید
آن را خاتمه دهید مینی بافر ناپدید می شود و دستور C-x C-f می رود
برای یافتن فایلی که انتخاب کرده اید کار کنید.

محتویات فایل اکنون روی صفحه ظاهر می شود و می توانید آن را ویرایش کنید
فهرست. هنگامی که می خواهید تغییرات خود را دائمی کنید، عبارت را تایپ کنید
فرمان

با C-x C-s فایل را ذخیره کنید

این متن درون Emacs را در فایل کپی می کند. اولین باری که تو
این کار را انجام دهید، Emacs نام فایل اصلی را به یک نام جدید تغییر می دهد تا آن را تغییر دهید
گم نشده است نام جدید با افزودن "~" به انتهای آن ساخته می شود
نام فایل اصلی هنگامی که ذخیره به پایان رسید، Emacs را نمایش می دهد
نام فایل نوشته شده

>> نوع C-x C-s TUTORIAL <بازگشت>.
   این باید این آموزش را در فایلی به نام TUTORIAL ذخیره کند و نشان دهد
   "نوشت ... TUTORIAL" در پایین صفحه.

می توانید یک فایل موجود را پیدا کنید، آن را مشاهده یا ویرایش کنید. شما همچنین می توانید
فایلی را پیدا کنید که قبلاً وجود ندارد. این راه ایجاد یک است
فایل با Emacs: فایل را پیدا کنید که خالی شروع می شود و سپس شروع کنید
درج متن برای فایل وقتی از شما درخواست می‌کنید که فایل را ذخیره کنید،
Emacs در واقع فایل را با متنی که شما درج کرده اید ایجاد می کند.
از آن به بعد، می توانید خود را در حال ویرایش یک نسخه قبلی بدانید
فایل موجود


* بافرها
---------

اگر فایل دومی با C-x C-f پیدا کردید، فایل اول باقی می ماند
داخل Emacs می‌توانید با یافتن دوباره آن به آن برگردید
C-x C-f. به این ترتیب می توانید تعداد زیادی فایل را در داخل Emacs دریافت کنید.

با Emacs متن هر فایل را در یک شی به نام "بافر" ذخیره می کند.
پیدا کردن یک فایل یک بافر جدید در Emacs ایجاد می کند. برای دیدن لیستی از
بافرهایی که در حال حاضر وجود دارند، تایپ کنید

با C-x C-b لیست بافرها
** C-x C-b برگشت داده شده است، اما می توانید به جای آن از منوی "Buffers" استفاده کنید [بیشتر] **

>> اکنون C-x C-b را امتحان کنید.

ببینید که چگونه هر بافر یک نام دارد و همچنین ممکن است نام فایلی برای آن داشته باشد
فایلی که محتویات آن را نگه می دارد. هر متنی که در پنجره Emacs می بینید
همیشه بخشی از برخی بافر است.

>> با C-x 1 را تایپ کنید تا از شر لیست بافر خلاص شوید.

هنگامی که چندین بافر دارید، تنها یکی از آنها "جاری" است
زمان. آن بافر همان بافری است که شما ویرایش می کنید. اگر می خواهید دیگری را ویرایش کنید
بافر، باید به آن "سوئیچ" کنید. اگر می خواهید به یک بافر سوئیچ کنید
که مربوط به یک فایل است، می توانید با مراجعه مجدد به فایل این کار را انجام دهید
با C-x C-f. اما یک راه ساده تر وجود دارد: از دستور C-x b استفاده کنید.
** C-x b برگشت خورده است، اما می توانید به جای آن از <f7> b b استفاده کنید [بیشتر] **
در آن دستور باید نام بافر را تایپ کنید.

>> با تایپ C-x C-f foo <Return> فایلی به نام "foo" ایجاد کنید.
   سپس C-x b TUTORIAL <Return> را تایپ کنید تا به این آموزش بازگردید.

اغلب اوقات، نام بافر با نام فایل یکی است
(بدون قسمت پوشه فایل). به هر حال، این همیشه درست نیست.
لیست بافری که با C-x C-b ایجاد می کنید، نام بافر را به هر دوی شما نشان می دهد
و نام فایل هر بافر.

برخی از بافرها با فایل ها مطابقت ندارند. بافر به نام
"*Buffer List*" که حاوی لیست بافری است که شما با آن ساخته اید
C-x C-b، هیچ فایلی ندارد. این بافر TUTORIAL در ابتدا انجام شد
فایلی ندارد، اما اکنون دارد، زیرا در بخش قبل شما
C-x C-s را تایپ کرد و آن را در یک فایل ذخیره کرد.

بافر با نام "*Messages*" نیز با هیچ فایلی مطابقت ندارد.
این بافر حاوی پیام هایی است که در پایین ظاهر شده اند
خط در طول جلسه Emacs شما.

>> حالا C-x b *Messages* <Return> را تایپ کنید تا به بافر پیام ها نگاه کنید.
   سپس C-x b TUTORIAL <Return> را تایپ کنید تا به این آموزش بازگردید.

اگر در متن یک فایل تغییراتی ایجاد کردید، فایل دیگری را پیدا کنید،
این فایل اول را ذخیره نمی کند. تغییرات آن در Emacs باقی می ماند،
در بافر آن فایل ایجاد یا ویرایش فایل دوم
بافر هیچ تاثیری روی بافر فایل اول ندارد. این بسیار مفید است،
اما این بدان معناست که شما به یک راه راحت برای ذخیره اولین نیاز دارید
بافر فایل برای ذخیره باید به آن بافر برگردید
آن را با C-x C-s، یک مزاحم خواهد بود. بنابراین ما داریم

با C-x s برخی از بافرها را ذخیره کنید

با C-x s از شما در مورد هر بافری که حاوی تغییراتی است که دارید می پرسد
ذخیره نشده است از شما می پرسد برای هر یک از این بافرها، آیا ذخیره کنید
بافر

>> یک خط متن وارد کنید، سپس C-x s را تایپ کنید.
   باید از شما بپرسد که آیا بافر با نام TUTORIAL را ذخیره کنید یا خیر.
   با تایپ "y" به سوال پاسخ مثبت دهید.


* گسترش مجموعه فرمان
---------------------------

دستورات Emacs بسیار بسیار بیشتر از آنچه که ممکن است قرار داده شود وجود دارد
روی تمام شخصیت های کنترلی و متا. Emacs می شود در اطراف این با
دستور X (eXtend) این در دو طعم وجود دارد:

کاراکتر C-x eXtend. به دنبال یک شخصیت.
دستور M-x با نام eXtend. به دنبال یک نام طولانی.

اینها دستوراتی هستند که عموما مفید هستند اما کمتر از دستور استفاده می شوند
دستوراتی که قبلاً در مورد آنها آموخته اید. شما قبلاً چند مورد را دیده اید
از آنها: فایل دستور C-x C-f را برای یافتن و C-x C-s را برای ذخیره، برای
مثال. مثال دیگر دستور پایان دادن به Emacs است
جلسه - این دستور C-x C-c است. (نگران از دست دادن نباشید
تغییراتی که ایجاد کرده اید؛ C-x C-c پیشنهاد می کند هر فایل تغییر یافته را قبلاً ذخیره کنید
Emacs را می کشد.)

اگر از صفحه نمایش گرافیکی استفاده می کنید، نیازی به نمایشگر خاصی ندارید
دستور انتقال از Emacs به برنامه دیگر. شما می توانید این کار را انجام دهید
با ماوس یا با دستورات مدیر پنجره. با این حال، اگر شما
با استفاده از ترمینال متنی که می تواند تنها یک برنامه را در یک زمان نشان دهد،
شما باید Emacs را "تعلیق" کنید تا به هر برنامه دیگری بروید.

با C-z دستور خروج *موقت*--- از Emacs است تا بتوانید بروید
پس از آن به همان جلسه Emacs برگردید. هنگامی که Emacs روی a اجرا می شود
ترمینال متنی، C-z Emacs را به حالت تعلیق در می آورد. یعنی به پوسته برمی گردد
اما کار Emacs را از بین نمی برد. در رایج ترین پوسته ها، شما
می تواند Emacs را با دستور "fg" یا با‪ "%emacs"‬ از سر بگیرد.

زمان استفاده از C-x C-c زمانی است که می خواهید از سیستم خارج شوید. این نیز است
چیزی که برای خروج از Emacs فراخوانی شده برای ویرایش سریع استفاده می شود
همانطور که توسط یک ابزار مدیریت ایمیل.

دستورات C-x زیادی وجود دارد. در اینجا لیستی از مواردی است که یاد گرفته اید:

      با C-x C-f      فایل را پیدا کنید
      با C-x C-s      ذخیره فایل
      با C-x s        برخی از بافرها را ذخیره کنید
      با C-x C-b       لیست بافرها
      با C-x b         سوئیچ بافر
      با C-x C-c       از Emacs خارج شوید
      با C-x 1         تمام پنجره ها را به جز یک حذف کنید
      با C-x u         واگرد

دستورات با نام eXtended دستوراتی هستند که حتی کمتر مورد استفاده قرار می گیرند
به طور مکرر یا دستوراتی که فقط در حالت های خاصی استفاده می شوند. یک
به عنوان مثال دستور replace-string است که یک رشته را جایگزین می کند
دیگری در بافر وقتی M-x را تایپ می‌کنید، Emacs از شما می‌خواهد
پایین صفحه با M-x و باید نام آن را تایپ کنید
فرمان؛ در این مورد، "replace-string". فقط "repl s<TAB>" را تایپ کنید و
Emacs نام را تکمیل می کند. (<TAB> کلید Tab است که معمولاً یافت می شود
بالای کلید CapsLock یا Shift نزدیک لبه سمت چپ کیبورد.)
نام فرمان را با <Return> ارسال کنید.

دستور replace-string به دو آرگومان نیاز دارد - رشته باید باشد
جایگزین شد، و رشته ای که جایگزین آن شود. باید به هر کدام پایان دهید
آرگومان با <Return>.

>> مکان نما را به خط خالی دو خط زیر این یکی ببرید.
   سپس M-x repl s<Return>changed<Return>altered<Return> را تایپ کنید.


   توجه کنید که این خط چگونه تغییر کرده است: شما کلمه را جایگزین کرده اید
   "تغییر" با "تغییر" هر جا که رخ داد، بعد از
   موقعیت اولیه مکان نما


* ذخیره خودکار
-----------

وقتی تغییراتی در فایلی ایجاد کرده اید، اما هنوز آنها را ذخیره نکرده اید،
اگر کامپیوتر شما خراب شود، ممکن است از بین بروند. برای محافظت از شما
به این ترتیب، Emacs به صورت دوره ای برای هر فایلی که یک فایل "ذخیره خودکار" می نویسد
شما در حال ویرایش هستید نام فایل ذخیره خودکار دارای یک # در ابتدا و
پایان؛ به عنوان مثال، اگر فایل شما "hello.c" نام دارد، ذخیره خودکار آن است
نام فایل "#hello.c#" است. وقتی فایل را به روش عادی ذخیره می کنید،
Emacs فایل ذخیره خودکار خود را حذف می کند.

اگر رایانه خراب شد، می‌توانید ویرایش ذخیره‌شده خودکار خود را توسط بازیابی کنید
یافتن فایل به طور معمول (فایلی که در حال ویرایش آن بودید، نه خودکار
ذخیره فایل) و سپس تایپ M-x recover-this-file <Return>. هنگامی که آن را
تأیید می خواهد، yes<Return> را تایپ کنید تا ادامه دهید و آن را بازیابی کنید
ذخیره خودکار داده ها


* منطقه اکو
-----------

اگر Emacs ببیند که به آرامی دستورات چند کاراکتری را تایپ می کنید، آن را انجام می دهد
آنها را در پایین صفحه در ناحیه ای به نام the به شما نشان می دهد
"منطقه اکو". ناحیه اکو حاوی خط پایین صفحه است.


* خط حالت
-----------

خط بلافاصله بالای ناحیه اکو "خط حالت" نامیده می شود.
خط حالت چیزی شبیه به این می گوید:

 -:**- آموزش 63% L749 (اساسی)

این خط اطلاعات مفیدی در مورد وضعیت Emacs و
متنی که در حال ویرایش آن هستید

شما از قبل می دانید که نام فایل به چه معناست -- این فایلی است که شما دارید
یافت. NN% موقعیت فعلی شما را در متن بافر نشان می دهد. آی تی
به این معنی است که NN درصد از بافر بالای صفحه نمایش است.
اگر بالای بافر روی صفحه باشد، به جای آن "بالا" می گوید
از "0٪". اگر پایین بافر روی صفحه باشد، می گوید
"ربات". اگر به بافری نگاه می کنید که آنقدر کوچک است که همه آن روی آن جا می شود
روی صفحه، خط حالت می گوید "همه".

با L و ارقام موقعیت را به طریق دیگری نشان می دهند: آنها را نشان می دهند
شماره خط فعلی نقطه

ستاره های نزدیک به جلو به این معنی است که شما تغییراتی در متن ایجاد کرده اید.
درست پس از بازدید یا ذخیره یک فایل، آن قسمت از خط حالت نمایش داده می شود
بدون ستاره، فقط خط تیره

بخشی از خط حالت در داخل پرانتز این است که به شما بگوید چیست
حالت‌های ویرایشی که در آن هستید. حالت پیش‌فرض Fundamental است
چیزی که الان استفاده می کنید این نمونه ای از "حالت اصلی" است.

با Emacs دارای بسیاری از حالت های اصلی مختلف است. برخی از آنها برای
ویرایش زبان های مختلف و/یا انواع متن، مانند حالت Lisp،
حالت متنی و غیره. در هر زمان یک و تنها یک حالت اصلی فعال است،
و نام آن را همیشه می توان در خط حالت دقیقاً در جایی یافت
"بنیادی" اکنون است.

هر حالت اصلی باعث می شود که چند دستور متفاوت عمل کنند. مثلا،
دستوراتی برای ایجاد نظر در یک برنامه وجود دارد و از آنجایی که هر کدام
زبان برنامه نویسی ایده متفاوتی از آنچه یک نظر باید داشته باشد دارد
به نظر می رسد، هر حالت اصلی باید نظرات متفاوتی را درج کند. هر یک
حالت اصلی نام یک دستور توسعه یافته است، که چگونه می توانید
به آن حالت تغییر دهید برای مثال، M-x fundamental-mode دستوری است به
به حالت اساسی بروید.

اگر قرار است متنی به زبان انسانی مانند این فایل را ویرایش کنید، شما
احتمالا باید از حالت متن استفاده کنید.

>> با M-x text-mode <Return> را تایپ کنید.

نگران نباشید، هیچ یک از دستورات Emacs که یاد گرفته اید تغییر نمی کند
هر راه عالی اما می توانید مشاهده کنید که M-f و M-b اکنون درمان می کنند
آپاستروف ها به عنوان بخشی از کلمات قبلاً در حالت بنیادی،
M-f و M-b با آپاستروف ها به عنوان جداکننده کلمات رفتار می کردند.

حالت های اصلی معمولاً تغییرات ظریفی مانند آن یکی: اکثر دستورات ایجاد می کنند
در هر حالت اصلی "همان کار" را انجام دهید، اما آنها کمی کار می کنند
متفاوت

برای مشاهده اسناد در حالت اصلی فعلی خود، C-h m را تایپ کنید.

>> مکان نما را به خط زیر این خط ببرید.
>> C-l C-l را تایپ کنید تا این خط به بالای صفحه نمایش داده شود.
>> C-h m را تایپ کنید تا ببینید حالت متن با حالت اساسی چه تفاوتی دارد.
>> C-x 1 را تایپ کنید تا اسناد را از روی صفحه حذف کنید.

مدهای ماژور را ماژور می نامند زیرا حالت های فرعی نیز وجود دارد.
حالت های مینور جایگزینی برای حالت های اصلی نیستند، فقط جزئی هستند
اصلاحات آنها هر حالت جزئی را می توان توسط روشن یا خاموش کرد
خود، مستقل از تمام حالت های جزئی دیگر، و مستقل از شما
حالت اصلی بنابراین نمی توانید از هیچ حالت جزئی یا یک حالت فرعی یا هر کدام استفاده کنید
ترکیبی از چند حالت جزئی

یک حالت جزئی که بسیار مفید است، به خصوص برای ویرایش
متن به زبان انسان، حالت پر کردن خودکار است. وقتی این حالت روشن است، Emacs
هر زمان که کلمات را وارد می کنید، خط بین کلمات را به طور خودکار می شکند
متن بنویسید و خطی بسازید که خیلی پهن باشد.

با انجام حالت پر کردن خودکار M-x <Return> می توانید حالت پر کردن خودکار را روشن کنید.
وقتی حالت روشن است، می توانید با انجام این کار دوباره آن را خاموش کنید
حالت پر کردن خودکار M-x <بازگشت>. اگر حالت خاموش باشد، این دستور روشن می شود
آن را روشن می کند و اگر حالت روشن است، این دستور آن را خاموش می کند. ما این را می گوییم
دستور "تغییر حالت".


>> با M-x auto-fill-mode <Return> را اکنون تایپ کنید. سپس یک خط "asdf" را وارد کنید
   دوباره تا زمانی که ببینید که به دو خط تقسیم شده است. باید وارد کنی
   فاصله بین آنها وجود دارد زیرا Auto Fill خطوط را فقط در فواصل می شکند.

حاشیه معمولاً 70 کاراکتر تنظیم می شود، اما می توانید آن را تغییر دهید
با دستور C-x f. شما باید تنظیمات حاشیه ای را که می خواهید بدهید
به عنوان یک استدلال عددی

>> با C-x f را با آرگومان 20 تایپ کنید. (C-u 2 0 C-x f).
   سپس مقداری متن را تایپ کنید و Emacs خطوط 20 را پر کنید
   شخصیت ها با آن سپس با استفاده از آن، حاشیه را به 70 برگردانید
   دوباره C-x f.

اگر در وسط پاراگراف تغییراتی ایجاد کردید، حالت پر کردن خودکار
دوباره آن را برای شما پر نمی کند.
برای پر کردن مجدد پاراگراف، M-q (META-q) را با مکان نما در داخل تایپ کنید
آن پاراگراف

>> مکان نما را به پاراگراف قبلی ببرید و M-q را تایپ کنید.


* جستجوکردن
-----------

با Emacs می تواند رشته ها را جستجو کند («رشته» گروهی از رشته های پیوسته است
کاراکترها) یا به جلو از طریق متن یا به عقب از طریق آن.
جستجوی رشته یک فرمان حرکت مکان نما است. مکان نما را حرکت می دهد
به مکان بعدی که آن رشته ظاهر می شود.

دستور جستجوی Emacs "افزایشی" است. این بدان معنی است که
جستجو زمانی اتفاق می افتد که رشته مورد نظر را برای جستجو تایپ می کنید.

دستور شروع جستجو C-s برای جستجوی جلو و C-r است
برای جستجوی معکوس اما صبر کنید! اکنون آنها را امتحان نکنید.

وقتی C-s را تایپ می کنید متوجه خواهید شد که رشته "I-search" به صورت ظاهر می شود
یک اعلان در ناحیه اکو این به شما می گوید که Emacs در آن چیزی است که هست
یک جستجوی افزایشی نامیده می شود که منتظر شماست تا چیزی را تایپ کنید
می خواهید جستجو کنید <بازگشت> یک جستجو را خاتمه می دهد.

>> اکنون C-s را برای شروع جستجو تایپ کنید. به آرامی، یک حرف در یک زمان،
   کلمه "مکان نما" را تایپ کنید، پس از تایپ هر کدام مکث کنید
   کاراکتر برای توجه به آنچه برای مکان نما اتفاق می افتد.
   اکنون یک بار "مکان نما" را جستجو کرده اید.
>> دوباره تایپ کنید C-s، برای جستجوی وقوع بعدی "مکان نما".
>> اکنون <DEL> را چهار بار تایپ کنید و ببینید مکان نما چگونه حرکت می کند.
>> برای پایان یافتن جستجو، <Return> را تایپ کنید.

دیدی چی شد؟ Emacs، در یک جستجوی افزایشی، سعی می کند
به رخداد رشته ای که تاکنون تایپ کرده اید بروید. به
به رخداد بعدی "مکان نما" بروید فقط C-s را دوباره تایپ کنید. اگر چنین نیست
وقوع وجود دارد، Emacs بوق می‌زند و به شما می‌گوید جستجو در حال حاضر است
"شکست" C-g نیز جستجو را خاتمه می دهد.

اگر در وسط یک جستجوی افزایشی هستید و <DEL> را تایپ کنید،
جستجوی "retreats" به مکان قبلی. اگر <DEL> را تایپ کنید فقط
بعد از اینکه C-s را تایپ کردید تا به جستجوی بعدی بروید
رشته، <DEL> مکان نما را به یک اتفاق قبلی برمی گرداند. اگر
هیچ مورد قبلی وجود ندارد، <DEL> آخرین کاراکتر را پاک می کند
در رشته جستجو برای مثال، فرض کنید "c" را تایپ کرده اید
برای اولین بار "c" را جستجو کنید. حالا اگر "u" را تایپ کنید،
مکان نما به اولین رخداد "cu" حرکت می کند. حالا <DEL> را تایپ کنید.
این "u" را از رشته جستجو پاک می کند و مکان نما به عقب برمی گردد
به اولین وقوع "ج".

اگر در وسط جستجو هستید، کنترل یا متا را تایپ کنید
شخصیت (به استثنای معدودی - شخصیت هایی که در الف خاص هستند
جستجو، مانند C-s و C-r)، جستجو خاتمه می یابد.

با C-s جستجویی را شروع می کند که به دنبال هر رخدادی از رشته جستجو می شود
بعد از موقعیت مکان نما فعلی. اگر می خواهید جستجو کنید
چیزی در ابتدای متن، به جای آن، C-r را تایپ کنید. همه چیزهایی که ما
گفته اند در مورد C-s برای C-r نیز صدق می کند، با این تفاوت که جهت
جستجو معکوس شده است


* پنجره های چندگانه
------------------

یکی از ویژگی های خوب Emacs این است که می توانید بیشتر از آن را نمایش دهید
یک پنجره روی صفحه نمایش در همان زمان. (توجه داشته باشید که Emacs از
اصطلاح "قاب" - که در بخش بعدی توضیح داده شده است - برای برخی دیگر
برنامه ها "ویندوز" را صدا می کنند. کتابچه راهنمای Emacs حاوی واژه نامه ای از
شرایط Emacs.)

>> مکان نما را به این خط ببرید و C-l C-l را تایپ کنید.

>> حالا C-x 2 را تایپ کنید که صفحه را به دو پنجره تقسیم می کند.
   هر دو پنجره این آموزش را نمایش می دهند. مکان نما ویرایش باقی می ماند
   پنجره بالا

>> با C-M-v را برای پیمایش پنجره پایین تایپ کنید.
   (اگر کلید META واقعی ندارید، <ESC> C-v را تایپ کنید.)

>> تایپ کنید C-x o ("o" برای "دیگر") برای حرکت مکان نما به پنجره پایین.
>> برای پیمایش از C-v و M-v در پنجره پایین استفاده کنید.
   به خواندن این دستورالعمل ها در پنجره بالا ادامه دهید.

>> دوباره C-x o را تایپ کنید تا مکان نما را به پنجره بالا برگردانید.
   مکان نما در پنجره بالا دقیقاً همان جایی است که قبلا بود.

می توانید از C-x o برای جابجایی بین پنجره ها استفاده کنید. "انتخاب شده
پنجره»، جایی که بیشترین ویرایش در آن صورت می گیرد، همان پنجره ای است که برجسته است
مکان نما که وقتی تایپ نمی کنید چشمک می زند. پنجره های دیگر دارند
موقعیت مکان نما خود را. اگر Emacs را به صورت گرافیکی اجرا می کنید
نمایشگر، آن نشانگرها به صورت کادرهای توخالی بدون چشمک‌زن ترسیم می‌شوند.


دستور C-M-v هنگامی که متن را به صورت یکجا ویرایش می کنید بسیار مفید است
پنجره و استفاده از پنجره دیگر فقط برای مرجع. بدون ترک
در پنجره انتخاب شده، می توانید متن را در پنجره دیگر اسکرول کنید
C-M-v.

با C-M-v نمونه ای از یک کاراکتر CONTROL-META است. اگر متا دارید
کلید (یا Alt)، می توانید با نگه داشتن هر دو CONTROL و META C-M-v را تایپ کنید.
هنگام تایپ v. مهم نیست که CONTROL بیاید یا META
ابتدا" زیرا هر دوی این کلیدها با تغییر کاراکترهای شما عمل می کنند
نوع

اگر کلید META ندارید و به جای آن از <ESC> استفاده می کنید، ترتیب را انجام دهید
مهم است: باید <ESC> و سپس CONTROL-v را تایپ کنید، زیرا
CONTROL-<ESC> v کار نخواهد کرد. این به این دلیل است که <ESC> یک کاراکتر است
در نوع خود، نه یک کلید اصلاح کننده.

>> با C-x 1 را (در پنجره بالا) تایپ کنید تا از شر پنجره پایین خلاص شوید.

(اگر C-x 1 را در پنجره پایین تایپ کرده بودید، خلاص می شد
از برترین ها این دستور را به صورت «فقط یکی نگه دارید» در نظر بگیرید
پنجره - پنجره ای که من قبلاً در آن هستم.")

شما مجبور نیستید یک بافر را در هر دو پنجره نمایش دهید. اگر شما
از C-x C-f برای پیدا کردن فایل در یک پنجره استفاده کنید، در پنجره دیگر نه
تغییر دادن. شما می توانید یک فایل را در هر پنجره به طور مستقل پیدا کنید.

در اینجا روش دیگری برای استفاده از دو پنجره برای نمایش دو چیز مختلف وجود دارد:

>> با C-x 4 C-f و سپس نام یکی از فایل های خود را تایپ کنید.
   با <بازگشت> خاتمه دهید. ببینید فایل مشخص شده در پایین ظاهر می شود
   پنجره مکان نما نیز به آنجا می رود.

>> برای بازگشت به پنجره بالا C-x o و برای حذف C-x 1 را تایپ کنید
   پنجره پایین


* قاب های چندگانه
------------------

با Emacs همچنین می تواند چندین "فریم" ایجاد کند. قاب چیزی است که ما آن را یکی می نامیم
مجموعه ای از پنجره ها، همراه با منوهای آن، نوارهای اسکرول، اکو
منطقه و غیره. در نمایشگرهای گرافیکی، چیزی که Emacs آن را "قاب" می نامد همان چیزی است
اکثر برنامه های کاربردی دیگر "پنجره" می نامند. فریم های گرافیکی متعدد
را می توان همزمان بر روی صفحه نمایش نشان داد. فقط در ترمینال متنی
یک فریم را می توان در یک زمان نشان داد.

>> نوع C-x 5 2.
   مشاهده کنید که یک قاب جدید روی صفحه نمایش شما ظاهر می شود.

شما می توانید هر کاری را که در فریم اصلی انجام داده اید در فریم جدید انجام دهید.
هیچ چیز خاصی در قاب اول وجود ندارد.

>> نوع C-x 5 0.
   این قاب انتخاب شده را حذف می کند.

شما همچنین می توانید یک قاب را با استفاده از روش معمولی ارائه شده توسط
سیستم گرافیکی (اغلب روی دکمه ای با "X" در گوشه بالا کلیک کنید
از قاب). اگر آخرین فریم کار Emacs را به این ترتیب حذف کنید،
که از Emacs خارج می شود.


* سطوح ویرایش بازگشتی
--------------------------

گاهی اوقات وارد چیزی می شوید که «ویرایش بازگشتی» نامیده می شود
سطح". این با براکت های مربع در خط حالت نشان داده می شود.
اطراف پرانتزهای اطراف نام حالت اصلی. برای
به عنوان مثال، ممکن است به جای (اساسی) [(بنیادی)] را ببینید.

برای خارج شدن از سطح ویرایش بازگشتی، <ESC> <ESC> <ESC> را تایپ کنید.
این یک دستور همه منظوره "برو بیرون" است. همچنین می توانید از آن استفاده کنید
حذف پنجره های اضافی و خارج شدن از مینی بافر.

>> با M-x را تایپ کنید تا وارد یک مینی بافر شوید. سپس <ESC> <ESC> <ESC> را تایپ کنید
   برو بیرون.

شما نمی توانید از C-g برای خارج شدن از یک سطح ویرایش بازگشتی استفاده کنید. این هست
زیرا C-g برای لغو دستورات و آرگومان ها در داخل استفاده می شود
سطح ویرایش بازگشتی


* دریافت کمک بیشتر
-------------------

در این آموزش سعی شده است اطلاعات کافی در اختیار شما قرار گیرد
شروع به استفاده از Emacs کنید. آنقدر در Emacs موجود است که
توضیح همه چیز در اینجا غیرممکن است. با این حال، ممکن است بخواهید
برای کسب اطلاعات بیشتر در مورد Emacs زیرا دارای بسیاری از ویژگی های مفید دیگر است.
Emacs دستوراتی را برای خواندن اسناد در مورد Emacs ارائه می دهد
دستورات این دستورات "کمک" همه با کاراکتر شروع می شوند
CONTROL-h که "شخصیت Help" نامیده می شود.

برای استفاده از ویژگی های Help، نویسه C-h و سپس a را تایپ کنید
شخصیت می گوید چه نوع کمکی می خواهید. اگر واقعاً گم شده اید،
نوع C-h و Emacs به شما خواهد گفت که چه نوع کمکی می تواند ارائه دهد.
اگر C-h را تایپ کرده اید و به این نتیجه رسیده اید که هیچ کمکی نمی خواهید، فقط
برای لغو آن، C-g را تایپ کنید.

(اگر C-h پیامی در مورد راهنما در پایین صفحه نمایش نمی دهد
روی صفحه، به جای آن کلید F1 یا M-x help <Return> را تایپ کنید.)

اساسی ترین ویژگی HELP C-h c است. تایپ کنید C-h، کاراکتر c و
یک کاراکتر یا دنباله فرمان؛ سپس Emacs یک خلاصه بسیار کوتاه نمایش می دهد
شرح فرمان

>> نوع C-h c C-p.

پیام باید چیزی شبیه این باشد:

با C-p دستور قبلی خط را اجرا می کند

این "نام تابع" را به شما می گوید. از نام توابع
برای نشان دادن کاری که دستور انجام می دهد انتخاب می شوند، آنها می توانند به عنوان کار کنند
اسناد بسیار مختصر - برای یادآوری دستورات شما کافی است
قبلا یاد گرفته اند

دستورات چند کاراکتری مانند C-x C-s و <ESC>v (به جای M-v،
اگر کلید META یا EDIT یا ALT ندارید) پس از C-h c نیز مجاز هستند.


برای دریافت اطلاعات بیشتر در مورد یک دستور، به جای C-h c از C-h k استفاده کنید.

>> نوع C-h k C-p.

این مستندات تابع و همچنین نام آن را نمایش می دهد.
در یک پنجره Emacs وقتی خواندن خروجی تمام شد، تایپ کنید
C-x 1 برای خلاص شدن از شر آن پنجره. شما مجبور نیستید این کار را درست انجام دهید
دور. می توانید در حین مراجعه به متن راهنما مقداری ویرایش انجام دهید و
سپس C-x 1 را تایپ کنید.

در اینجا چند گزینه مفید دیگر C-h وجود دارد:

   با C-h f یک تابع را توصیف کنید. شما نام آن را تایپ می کنید
عملکرد.

>> با C-h f خط قبلی <Return> را تایپ کنید.
   این تمام اطلاعات Emacs در مورد آن را نمایش می دهد
   تابعی که دستور C-p را پیاده سازی می کند.

یک دستور مشابه C-h v مستندات متغیرها را نمایش می دهد.
از جمله مواردی که می توانید مقادیر آنها را برای سفارشی کردن رفتار Emacs تنظیم کنید.
زمانی که Emacs از آن درخواست کرد، باید نام متغیر را تایپ کنید.

 با  C-h یک دستور Apropos. یک کلمه کلیدی را تایپ کنید تا Emacs لیست شود
تمام دستوراتی که نام آنها حاوی آن کلمه کلیدی است.
همه این دستورات را می توان با META-x فراخوانی کرد.
برای برخی از دستورات، Command Apropos نیز a را فهرست می کند
دنباله ای از یک یا چند کاراکتر که یکسان اجرا می شود
فرمان

>> یک فایل C-h <Return> را تایپ کنید.

در پنجره ای دیگر لیستی از تمام دستورات M-x با "file" نمایش داده می شود.
به نام آنها شما دستورات کاراکتر را در کنار آن خواهید دید
نام دستورات مربوطه (مانند C-x C-f در کنار find-file).

>> برای پیمایش پنجره راهنما، C-M-v را تایپ کنید. این را چند بار انجام دهید.

>> با C-x 1 را برای حذف پنجره راهنما تایپ کنید.

   با C-h i خواندن کتابچه راهنمای همراه (با نام مستعار اطلاعات). این دستور قرار می دهد
شما را به یک بافر ویژه به نام "*info*" که در آن شما
می توانید کتابچه راهنمای بسته های نصب شده روی سیستم خود را بخوانید.
برای خواندن کتابچه راهنمای Emacs، m emacs <Return> را تایپ کنید.
اگر قبلاً از Info استفاده نکرده‌اید، h و Emacs را تایپ کنید
شما را به یک تور با راهنما از امکانات حالت اطلاعات می برد.
پس از اتمام این آموزش، باید
به عنوان مستندات اصلی خود به کتابچه راهنمای Emacs Info مراجعه کنید.


* ویژگی های بیشتر
---------------

می‌توانید با مطالعه کتابچه راهنمای Emacs اطلاعات بیشتری کسب کنید
کتاب چاپ شده یا داخل Emacs (از منوی Help استفاده کنید یا C-h r را تایپ کنید).
دو ویژگی که ممکن است به خصوص دوست داشته باشید تکمیل است که باعث صرفه جویی می شود
تایپ کردن، و dired، که مدیریت فایل را ساده می کند.

تکمیل راهی برای جلوگیری از تایپ غیر ضروری است. به عنوان مثال، اگر شما
می‌خواهید به بافر *Messages* تغییر دهید، می‌توانید C-x b *M<Tab> را تایپ کنید
و Emacs بقیه نام بافر را تا جایی که می تواند پر می کند
از آنچه قبلاً تایپ کرده اید تعیین کنید. تکمیل نیز برای
نام دستورات و نام فایل ها تکمیل در Emacs توضیح داده شده است
کتابچه راهنمای کاربر در گره ای به نام "تکمیل".

با Dired شما را قادر می سازد تا فایل ها را در یک فهرست (و به صورت اختیاری آن) فهرست کنید
زیر شاخه ها)، در اطراف آن لیست حرکت کنید، بازدید کنید، نام خود را تغییر دهید، حذف کنید و
در غیر این صورت روی فایل ها کار کنید. Dired در Emacs توضیح داده شده است
کتابچه راهنمای کاربر در گره ای به نام "Dired".

این کتابچه راهنمای بسیاری از ویژگی های دیگر Emacs را نیز توضیح می دهد.


* نتیجه
------------

برای خروج از Emacs از C-x C-c استفاده کنید.

این آموزش برای همه کاربران جدید قابل درک است، بنابراین اگر
چیزی مبهم پیدا کردید، ننشینید و خودتان را سرزنش کنید - شکایت کنید!


* کپی برداری
---------

این آموزش برگرفته از مجموعه ای طولانی از آموزش های Emacs است
با کتابی که استوارت کرکرافت برای Emacs اصلی نوشته است شروع می شود.

این نسخه از آموزش بخشی از GNU Emacs است. دارای حق چاپ است
و با مجوز برای توزیع کپی در شرایط خاص همراه است:

  حق چاپ (C) 1985، 1996، 1998، 2001-2020 بنیاد نرم افزار آزاد،
  شرکت

  این فایل بخشی از GNU Emacs است.

  گنو ایمکس یک نرم افزار رایگان است: می توانید آن را مجدداً توزیع و/یا تغییر دهید
  آن را تحت شرایط مجوز عمومی عمومی گنو که توسط منتشر شده است
  بنیاد نرم افزار آزاد، یا نسخه 3 مجوز، یا
  (به انتخاب شما) هر نسخه بعدی.

  گنو Emacs به این امید که مفید باشد توزیع شده است،
  اما بدون ضمانت؛ حتی بدون ضمانت ضمنی
  قابلیت خرید و فروش یا تناسب اندام برای یک هدف خاص. را ببینید
  مجوز عمومی عمومی گنو برای جزئیات بیشتر.

  شما باید یک کپی از مجوز عمومی عمومی گنو دریافت کرده باشید
  همراه با گنو ایمکس اگر نه، به ‪ <https://www.gnu.org/licenses/>‬ مراجعه کنید.

لطفاً فایل COPYING را بخوانید و سپس کپی هایی از GNU Emacs را به آن بدهید
دوستان تو. کمک به رفع انسداد نرم افزاری ("مالکیت") توسط
استفاده، نوشتن و به اشتراک گذاری نرم افزار رایگان!



--- end of TUTORIAL.fa ---

;;; Local Variables:
;;;   coding: utf-8
;;;   bidi-display-reordering: t
;;;   sentence-end-double-space: nil
;;;   bidi-paragraph-direction: nil
;;; End:
